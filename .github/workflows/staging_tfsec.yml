name: 'Terraform Security Check'

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  tfsec:
    name: Security Check
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_DIR: Terraform/staging

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9

      - name: Install terraform-compliance
        run: |
          pip install terraform-compliance

      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init

      - name: Run terraform-compliance
        working-directory: ${{ env.TF_DIR }}
        run: |
          terraform plan -out=plan.out
          terraform show -json plan.out > plan.json
          terraform-compliance -f ../../features/ -p plan.json || true

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ env.TF_DIR }}
          framework: terraform
          soft_fail: true

      - name: Notify on failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Security check failed!'
          SLACK_COLOR: '#FF0000'
          SLACK_TITLE: 'Terraform Security Check Failed'
          SLACK_USERNAME: 'Security Bot'
